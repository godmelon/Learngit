git 使用命令:

初始化一个git仓库 --> 使用git init命令

添加文件到Git仓库，分两步：

第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；

第二步，使用命令git commit，完成。
(对于git commit使用时，应该注意加入对此处提交的说明，使用“-m”参数，例如：git commit -m "This is modified")

查看当前git仓库的状态 --> git status
如下内容：
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   readme.txt

no changes added to commit (use "git add" and/or "git commit -a")

以上则显示出了：readme.txt被修改了，此时如果要看修改点是什么，就需要使用 --> git diff readme.txt
如下内容：
$ git diff readme.txt
diff --git a/readme.txt b/readme.txt
index 99e0e11..af5443d 100644
--- a/readme.txt
+++ b/readme.txt
@@ -1,2 +1,3 @@
 Git is a distributed version control system.
-Git is free software distributed under the GPL.
\ No newline at end of file
+Git is free software distributed under the GPL.
+This is my first git test txt.
\ No newline at end of file

上方的就显示了修改了：
+Git is free software distributed under the GPL.
+This is my first git test txt.
这两行的内容。

此时就可以在此进行提交，提交方法还是 --> git commit（记得要加入对于此时修改的说明）
此处需要注意一点：每次修改完文件之后，想要提交最新的修改至仓库，都需要先 --> 1)git add <filename> 2)git commit -m "This is modified"
这两步不能省略，不然仅仅执行"git commit"不会成功提交修改

git log：显示出修改仓库的记录，也就是添加文件或者修改文件的记录，此处会显示出commit时自己添加的注释的内容
如下所示：
$ git log
commit 3157aa06708be9934c75b274a1db77427af3f0d5
Author: melonW <1973919240@qq.com>
Date:   Thu Oct 26 17:12:34 2017 +0800

    add yeah in readme.txt

commit 3e9ac21d419e32fdce0af3b7f1939ee92ae62ddc
Author: melonW <1973919240@qq.com>
Date:   Thu Oct 26 17:05:43 2017 +0800

    add a new file

commit 4c606ffd7fb9b7ce1132ea1c5f377d3f24b578f0
Author: melonW <1973919240@qq.com>
Date:   Wed Oct 25 16:59:24 2017 +0800

    append GPL

commit 97281d9a400b7fcd8cf991a564f4d08d50bcf0e9
Author: melonW <1973919240@qq.com>
Date:   Wed Oct 25 16:57:31 2017 +0800

    add distributed

commit 1d2029d484e9116df140db3a6d8b78ce84e18359
Author: melonW <1973919240@qq.com>
Date:   Wed Oct 25 16:46:20 2017 +0800

    wrote a readme file

或者在git log后加入参数 --pretty=online，可以简要显示：
$ git log --pretty=oneline
3157aa06708be9934c75b274a1db77427af3f0d5 add yeah in readme.txt
3e9ac21d419e32fdce0af3b7f1939ee92ae62ddc add a new file
4c606ffd7fb9b7ce1132ea1c5f377d3f24b578f0 append GPL
97281d9a400b7fcd8cf991a564f4d08d50bcf0e9 add distributed
1d2029d484e9116df140db3a6d8b78ce84e18359 wrote a readme file

一些解释：
你看到的一大串类似3628164...882e1e0的是commit id（版本号），和SVN不一样，Git的commit id不是1，2，3……递增的数字，
而是一个SHA1计算出来的一个非常大的数字，用十六进制表示，而且你看到的commit id和我的肯定不一样，以你自己的为准。
为什么commit id需要用这么一大串数字表示呢？因为Git是分布式的版本控制系统，后面我们还要研究多人在同一个版本库里工作，
如果大家都用1，2，3……作为版本号，那肯定就冲突了。




